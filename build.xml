<project name="virtualdisk" default="compile" basedir=".">
    <description>
        Simple build file.
    </description>

    <property name="src" location="src/" />
    <property name="lib" location="lib/" />
    <property name="extern" location="extern/" />
    <property name="test" location="test/" />
    <property name="build" location="build/" />
    <property name="instrumented" location="instrumented/" />
    <property name="dist" location="dist/" />
    <property name="reports" location="reports/" />
    <property name="reports.test" location="reports/test" />
    <property name="reports.coverage" location="reports/coverage" />
    <property name="reports.javadoc" location="reports/javadoc" />

    <path id="classpath.base">
        <fileset dir="${lib}">
            <include name="**/*.jar" />
        </fileset>
        <pathelement location="${build}" />
        <pathelement location="${src}" />
    </path>

    <path id="classpath.test">
        <pathelement location="${instrumented}" />
        <fileset dir="${extern}">
            <include name="**/*.jar" />
        </fileset>
        <pathelement location="${test}" />
        <path refid="classpath.base" />
    </path>

    <taskdef classpathref="classpath.test" resource="tasks.properties" />

    <target name="init" description="Sets up the structure for building.">
        <mkdir dir="${build}" />
        <mkdir dir="${dist}" />
        <mkdir dir="${reports}" />
        <mkdir dir="${reports.test}" />
        <mkdir dir="${reports.coverage}" />
        <mkdir dir="${reports.javadoc}" />
        <mkdir dir="data" />
    </target>

    <target name="compile" depends="init" description="Compiles the main source files.">
        <javac srcdir="${src}" destdir="${build}" debug="on">
            <classpath refid="classpath.base" />
        </javac>
    </target>

    <target name="jar" depends="clean,init,compile" description="Creates a jar of the project.">
        <jar destfile="${dist}/sample.jar">
            <fileset dir="${src}" includes="**/*.java" />
            <fileset dir="${build}" includes="**/*.class" />
            <zipgroupfileset dir="${lib}" includes="**/*.jar" />
            <manifest>
                <attribute name="Main-Class" value="com.virtualdisk.main.Main" />
            </manifest>
        </jar>
    </target>

    <target name="compile-tests" depends="init,compile" description="Compiles the test source files.">
        <javac srcdir="${test}" destdir="${build}" debug="on">
            <classpath refid="classpath.test" />
        </javac>
    </target>

    <target name="instrument" depends="compile-tests" description="Instruments the class files to measure code coverage.">
        <cobertura-instrument todir="${instrumented}" datafile="cobertura.ser">
            <fileset dir="${build}">
                <include name="**/*.class" />
                <exclude name="**/*Test.class" />
                <exclude name="TestFile.class" />
                <exclude name="**/Fake*NetworkServer.class" />
            </fileset>
        </cobertura-instrument>
    </target>

    <target name="run-tests" depends="compile-tests,instrument" description="Runs the tests, fails if any test fails.">
        <junit printsummary="yes" failureProperty="test.failure">
            <sysproperty key="net.sourceforge.cobertura.datafile" value="cobertura.ser" />
            <classpath refid="classpath.test" />
            <formatter type="plain" />
            <batchtest todir="${reports}">
                <fileset dir="${test}">
                    <include name="**/*Test.java" />
                </fileset>
            </batchtest>
        </junit>
        <fail message="Test failed." if="test.failure" />
    </target>

    <target name="coverage-report" description="Generates the coverage report.">
        <cobertura-report datafile="cobertura.ser"
            format="html" destdir="${reports.coverage}" srcdir="${src}" />
    </target>

    <target name="javadoc" depends="init" description="Generates the documentation.">
        <javadoc destdir="${reports.javadoc}" classpathref="classpath.base">
            <fileset dir="${src}">
                <include name="**/*.java" />
            </fileset>
        </javadoc>
    </target>

    <target name="clean" description="Removes all created files and directories.">
        <delete dir="${build}" />
        <delete dir="${dist}" />
        <delete dir="${instrumented}" />
        <delete dir="${reports}" />
        <delete dir="data" />
        <delete file="cobertura.ser" />
    </target>

</project>
